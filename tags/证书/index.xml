<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>证书 on Even - A super concise theme for Hugo</title>
    <link>https://whj2819.github.io/tags/%E8%AF%81%E4%B9%A6/</link>
    <description>Recent content in 证书 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 27 Mar 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://whj2819.github.io/tags/%E8%AF%81%E4%B9%A6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数字签名是什么</title>
      <link>https://whj2819.github.io/post/27/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://whj2819.github.io/post/27/</guid>
      <description>这里转载一下阮老师博客的一篇文章, 阮一峰. 通过阅读这篇文章可以理解数字签名、数字证书这些内容, 对理解 ssl 握手过程有一定的帮助. 原文网址.</description>
    </item>
    
    <item>
      <title>XCA(二)  制作服务端证书.</title>
      <link>https://whj2819.github.io/post/xca02/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://whj2819.github.io/post/xca02/</guid>
      <description>服务端证书制作 选择已经制作好的CA证书, 然后点击 new certificate 签名的时候选择先前制作好的根 CA, 模板选择https_server. 制作完成. 将服务器证书以</description>
    </item>
    
    <item>
      <title>XCA(一)  制作 CA 证书</title>
      <link>https://whj2819.github.io/post/xca/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://whj2819.github.io/post/xca/</guid>
      <description>XCA 软件下载地址 软件版本 2.1.2 xca 界面 首先创建一个用于保存数据的 database. 输入用于保护 database 的密码. 选择 certificates 页面, 点击 New Certificate 选项,出现如下所示界面: 这里我们首先需要</description>
    </item>
    
  </channel>
</rss>